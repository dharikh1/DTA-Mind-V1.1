# Use Ubuntu for better SQLite support
FROM ubuntu:22.04

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    python3 \
    make \
    g++ \
    git \
    sqlite3 \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 20
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

# Install pnpm globally
RUN npm install -g pnpm@latest

# Copy package files first for better caching
COPY package*.json ./
COPY pnpm-workspace.yaml ./
COPY turbo.json ./

# Copy package.json files for all packages
COPY packages/server/package*.json ./packages/server/
COPY packages/components/package*.json ./packages/components/
COPY packages/ui/package*.json ./packages/ui/
COPY packages/api-documentation/package*.json ./packages/api-documentation/

# Copy lockfile
COPY pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install --no-frozen-lockfile

# Copy source code
COPY . .

# Create necessary directories
RUN mkdir -p /app/packages/server/logs && \
    mkdir -p /app/packages/server/.dtamind && \
    mkdir -p /app/packages/server/.dtamind/logs

# Set environment variables
ENV HOME=/app/packages/server
ENV DTAMIND_USER_HOME=/app/packages/server
ENV NODE_ENV=development
ENV PORT=3000
ENV DTAMIND_USERNAME=admin
ENV DTAMIND_PASSWORD=admin123

# Expose ports
EXPOSE 3000 8080

# Set the working directory to the server package
WORKDIR /app/packages/server

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/api/v1/ping', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the application in development mode
CMD ["pnpm", "dev"]
